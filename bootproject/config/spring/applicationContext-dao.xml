<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

<!-- 配置SqlSessionFactory -->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 数据源 -->
	<property name="dataSource" ref="dataSource"/>
	<!-- 配置SqlMapConfig.xml -->
	<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>


	<property name="plugins">
		<array>
			<bean class="com.github.pagehelper.PageInterceptor">
				<property name="properties">
					<!--使用下面的方式配置参数，一行配置一个 -->
					<!--  <value>
                          params=value1
                      </value>-->
					<props>
						<!--设置连接数据库-->
						<prop key="pagehelper">mysql</prop>
						<!--设置页码数据不对时的逻辑处理-->
						<prop key="reasonable">true</prop>
					</props>
				</property>
			</bean>
		</array>
	</property>
</bean>



<!-- 配置userDao -->
<!-- <bean id="userDao" class="cn.itcast.ssm.dao.old.UserDaoImpl">
	注入会话工厂
	<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
</bean> -->


<!-- mapper动态代理 -->
<!-- 配置userMapper
MapperFactoryBean：用于生成 代理对象
 -->
<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
   注入会话工厂
	<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
	mapper接口
	<property name="mapperInterface" value="cn.itcast.ssm.dao.mapper.UserMapper"/>
</bean> -->

<!-- 使用mapper批量扫描器扫描mapper接口
规则：mapper.xml和mapper.java在一个目录 且同名即可 
扫描出来mapper，自动让spring容器注册，bean的id就是mapper类名(首字母小写)
 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 会话工厂 -->
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
  <!-- 扫描包路径
  多个包中间用半角逗号分隔
   -->
	<property name="basePackage" value="com.hbtcsrzzx.ssm.dao.mapper"/>
</bean>

	<!-- 通用 Mapper -->
	<!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hbtcsrzzx.ssm.dao.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper
			</value>
		</property>
	</bean>-->
</beans>