<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbtcsrzzx.ssm.dao.mapper.NoticeMapper">
	<resultMap id="BaseResultMap" type="com.hbtcsrzzx.ssm.po.Notice">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="regtime" property="regtime" jdbcType="VARCHAR" />
		<result column="publisher" property="publisher" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="publish_company" property="publishCompany"
			jdbcType="VARCHAR" />
		<result column="category" property="category" jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="image" property="image" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.hbtcsrzzx.ssm.po.NoticeWithBLOBs"
		extends="BaseResultMap">
		<result column="context" property="context" jdbcType="LONGVARCHAR" />
		<result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, title, regtime, publisher, state, publish_company, category, subject,
		type, image
	</sql>
	<sql id="Blob_Column_List">
		context, introduction
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.hbtcsrzzx.ssm.po.NoticeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>

		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="startRow != null and pageSize != 0">
			limit #{startRow},#{pageSize}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hbtcsrzzx.ssm.po.NoticeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="startRow != null and pageSize != 0">
			limit #{startRow},#{pageSize}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from notice
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from notice
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hbtcsrzzx.ssm.po.NoticeExample">
		delete from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hbtcsrzzx.ssm.po.NoticeWithBLOBs">
		insert into notice (id, title, regtime,
		publisher, state, publish_company,
		category, subject, type,
		image, context, introduction
		)
		values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{regtime,jdbcType=VARCHAR},
		#{publisher,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{publishCompany,jdbcType=VARCHAR},
		#{category,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER},
		#{image,jdbcType=VARCHAR}, #{context,jdbcType=LONGVARCHAR}, #{introduction,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hbtcsrzzx.ssm.po.NoticeWithBLOBs">
		insert into notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="regtime != null">
				regtime,
			</if>
			<if test="publisher != null">
				publisher,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="publishCompany != null">
				publish_company,
			</if>
			<if test="category != null">
				category,
			</if>
			<if test="subject != null">
				subject,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="image != null">
				image,
			</if>
			<if test="context != null">
				context,
			</if>
			<if test="introduction != null">
				introduction,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				#{regtime,jdbcType=VARCHAR},
			</if>
			<if test="publisher != null">
				#{publisher,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="publishCompany != null">
				#{publishCompany,jdbcType=VARCHAR},
			</if>
			<if test="category != null">
				#{category,jdbcType=VARCHAR},
			</if>
			<if test="subject != null">
				#{subject,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				#{image,jdbcType=VARCHAR},
			</if>
			<if test="context != null">
				#{context,jdbcType=LONGVARCHAR},
			</if>
			<if test="introduction != null">
				#{introduction,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hbtcsrzzx.ssm.po.NoticeExample"
		resultType="java.lang.Integer">
		select count(*) from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update notice
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.regtime != null">
				regtime = #{record.regtime,jdbcType=VARCHAR},
			</if>
			<if test="record.publisher != null">
				publisher = #{record.publisher,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.publishCompany != null">
				publish_company = #{record.publishCompany,jdbcType=VARCHAR},
			</if>
			<if test="record.category != null">
				category = #{record.category,jdbcType=VARCHAR},
			</if>
			<if test="record.subject != null">
				subject = #{record.subject,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.image != null">
				image = #{record.image,jdbcType=VARCHAR},
			</if>
			<if test="record.context != null">
				context = #{record.context,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.introduction != null">
				introduction = #{record.introduction,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update notice
		set id = #{record.id,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		regtime = #{record.regtime,jdbcType=VARCHAR},
		publisher = #{record.publisher,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=INTEGER},
		publish_company = #{record.publishCompany,jdbcType=VARCHAR},
		category = #{record.category,jdbcType=VARCHAR},
		subject = #{record.subject,jdbcType=VARCHAR},
		type = #{record.type,jdbcType=INTEGER},
		image = #{record.image,jdbcType=VARCHAR},
		context = #{record.context,jdbcType=LONGVARCHAR},
		introduction = #{record.introduction,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update notice
		set id = #{record.id,jdbcType=INTEGER},
		title = #{record.title,jdbcType=VARCHAR},
		regtime = #{record.regtime,jdbcType=VARCHAR},
		publisher = #{record.publisher,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=INTEGER},
		publish_company = #{record.publishCompany,jdbcType=VARCHAR},
		category = #{record.category,jdbcType=VARCHAR},
		subject = #{record.subject,jdbcType=VARCHAR},
		type = #{record.type,jdbcType=INTEGER},
		image = #{record.image,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hbtcsrzzx.ssm.po.NoticeWithBLOBs">
		update notice
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				regtime = #{regtime,jdbcType=VARCHAR},
			</if>
			<if test="publisher != null">
				publisher = #{publisher,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="publishCompany != null">
				publish_company = #{publishCompany,jdbcType=VARCHAR},
			</if>
			<if test="category != null">
				category = #{category,jdbcType=VARCHAR},
			</if>
			<if test="subject != null">
				subject = #{subject,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				image = #{image,jdbcType=VARCHAR},
			</if>
			<if test="context != null">
				context = #{context,jdbcType=LONGVARCHAR},
			</if>
			<if test="introduction != null">
				introduction = #{introduction,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hbtcsrzzx.ssm.po.NoticeWithBLOBs">
		update notice
		set title = #{title,jdbcType=VARCHAR},
		regtime = #{regtime,jdbcType=VARCHAR},
		publisher = #{publisher,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		publish_company = #{publishCompany,jdbcType=VARCHAR},
		category = #{category,jdbcType=VARCHAR},
		subject = #{subject,jdbcType=VARCHAR},
		type = #{type,jdbcType=INTEGER},
		image = #{image,jdbcType=VARCHAR},
		context = #{context,jdbcType=LONGVARCHAR},
		introduction = #{introduction,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hbtcsrzzx.ssm.po.Notice">
		update notice
		set title = #{title,jdbcType=VARCHAR},
		regtime = #{regtime,jdbcType=VARCHAR},
		publisher = #{publisher,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		publish_company = #{publishCompany,jdbcType=VARCHAR},
		category = #{category,jdbcType=VARCHAR},
		subject = #{subject,jdbcType=VARCHAR},
		type = #{type,jdbcType=INTEGER},
		image = #{image,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>