<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbtcsrzzx.ssm.dao.mapper.GUserMapper">
	<resultMap id="BaseResultMap" type="com.hbtcsrzzx.ssm.po.GUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="nationality" property="nationality" jdbcType="VARCHAR" />
		<result column="nation" property="nation" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="identity" property="identity" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="unit" property="unit" jdbcType="VARCHAR" />
		<result column="parent_name" property="parentName" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="e_mail" property="eMail" jdbcType="VARCHAR" />
		<result column="parent_phone" property="parentPhone" jdbcType="VARCHAR" />
		<result column="regtime" property="regtime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, gender, phone, nationality, nation, city, birthday, identity,
		password,
		unit, parent_name, address, e_mail, parent_phone, regtime, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hbtcsrzzx.ssm.po.GUserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from g_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="startRow != null and pageSize != 0">
			limit #{startRow},#{pageSize}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from g_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from g_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hbtcsrzzx.ssm.po.GUserExample">
		delete from g_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hbtcsrzzx.ssm.po.GUser">
		insert into g_user (id, name, gender,
		phone, nationality, nation,
		city, birthday, identity,
		password, unit, parent_name,
		address, e_mail, parent_phone,
		regtime, state)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{nationality,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
		#{identity,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{parentName,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{eMail,jdbcType=VARCHAR},
		#{parentPhone,jdbcType=VARCHAR},
		#{regtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hbtcsrzzx.ssm.po.GUser">
		insert into g_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="nationality != null">
				nationality,
			</if>
			<if test="nation != null">
				nation,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="identity != null">
				identity,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="parentName != null">
				parent_name,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="eMail != null">
				e_mail,
			</if>
			<if test="parentPhone != null">
				parent_phone,
			</if>
			<if test="regtime != null">
				regtime,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="nationality != null">
				#{nationality,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				#{nation,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="identity != null">
				#{identity,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="parentName != null">
				#{parentName,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="eMail != null">
				#{eMail,jdbcType=VARCHAR},
			</if>
			<if test="parentPhone != null">
				#{parentPhone,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				#{regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hbtcsrzzx.ssm.po.GUserExample"
		resultType="java.lang.Integer">
		select count(*) from g_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update g_user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.nationality != null">
				nationality = #{record.nationality,jdbcType=VARCHAR},
			</if>
			<if test="record.nation != null">
				nation = #{record.nation,jdbcType=VARCHAR},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=DATE},
			</if>
			<if test="record.identity != null">
				identity = #{record.identity,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.unit != null">
				unit = #{record.unit,jdbcType=VARCHAR},
			</if>
			<if test="record.parentName != null">
				parent_name = #{record.parentName,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.eMail != null">
				e_mail = #{record.eMail,jdbcType=VARCHAR},
			</if>
			<if test="record.parentPhone != null">
				parent_phone = #{record.parentPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.regtime != null">
				regtime = #{record.regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update g_user
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		nationality = #{record.nationality,jdbcType=VARCHAR},
		nation = #{record.nation,jdbcType=VARCHAR},
		city = #{record.city,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=DATE},
		identity = #{record.identity,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		unit = #{record.unit,jdbcType=VARCHAR},
		parent_name = #{record.parentName,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		e_mail = #{record.eMail,jdbcType=VARCHAR},
		parent_phone = #{record.parentPhone,jdbcType=VARCHAR},
		regtime = #{record.regtime,jdbcType=TIMESTAMP},
		state = #{record.state,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hbtcsrzzx.ssm.po.GUser">
		update g_user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="nationality != null">
				nationality = #{nationality,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				nation = #{nation,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="identity != null">
				identity = #{identity,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="parentName != null">
				parent_name = #{parentName,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="eMail != null">
				e_mail = #{eMail,jdbcType=VARCHAR},
			</if>
			<if test="parentPhone != null">
				parent_phone = #{parentPhone,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				regtime = #{regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hbtcsrzzx.ssm.po.GUser">
		update g_user
		set name = #{name,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		nationality = #{nationality,jdbcType=VARCHAR},
		nation = #{nation,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=DATE},
		identity = #{identity,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		unit = #{unit,jdbcType=VARCHAR},
		parent_name = #{parentName,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		e_mail = #{eMail,jdbcType=VARCHAR},
		parent_phone = #{parentPhone,jdbcType=VARCHAR},
		regtime = #{regtime,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>